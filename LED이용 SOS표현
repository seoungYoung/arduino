/*
 * 1. 대시의 길이는 도트의 3배
 * 2. 대시나 도트 사이 간격은 도트의 지속 시간과 같다.
 * 3. 두 문자 사이의 간격은 대시 하나의 길이와 같다.
 * 4. 두 단어 사이의 간격은 도트 7개의 지속시간과 같다
 */

#define led 11
const int dotDelay = 200;

char* letters[] = {
  ".-", "-...", "-.-.", "-..", ".", "..-.", "--.", "....", "..",    // A-I
  ".---", "-.-", ".-..", "--", "-.", "---", ".--.", "--.-", ".-.",  // J-R
  "...", "-", "..-", "...-", ".--", "-..-", "-.--", "--.."          // S-Z
};

char* numbers[] = {
  "-----", ".----", "..---", "...--", "....-", ".....", "-....", "--...", "---..", "----."
};

void setup() {
  // put your setup code here, to run once:
  pinMode(led, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  char ch;
  if (Serial.available() > 0) {
    ch = Serial.read();
    if (ch >= 'a' && ch <= 'z') {
      flashSequence(letters[ch - 'a']);
    }
    else if (ch >= 'A' && ch <= 'Z')
    {
      flashSequence(letters[ch - 'A']);
    }
    else if (ch >= '0' && ch <= '9')
    {
      flashSequence(numbers[ch - '0']);
    }
    else if (ch == ' ')
    {
      delay(dotDelay * 7);  // gap between words
    }
  }
}
void flashSequence(char *sequence)
{
  int i = 0;
  while (sequence[i] != NULL) // 한 문자 출력 : H 처럼..
  {
    flashDotOrDash(sequence[i]);
    i++;
  }
  delay(dotDelay * 3);    // gap between letters
}

void flashDotOrDash(char dotOrDash)
{
  digitalWrite(led, HIGH);
  if (dotOrDash == '.')
  {
    delay(dotDelay);
  }
  else // must be a dash
  {
    delay(dotDelay * 3);
  }
  digitalWrite(led, LOW);
  delay(dotDelay); // gap between flashes
}
